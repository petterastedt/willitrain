{"version":3,"sources":["assets/icons/rainy.svg","api.js","components/header/header.jsx","components/button/button.jsx","components/location/location.jsx","components/loader/loader.jsx","components/report/report.jsx","components/search/search.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchWeatherData","woeid","targetUrl","fetch","response","json","jsonResponse","console","log","fetchLocationData","param","param2","header","className","src","require","alt","Button","props","useState","buttonIsClicked","setButtonIsClicked","buttonIsDisabled","setButtonIsDisabled","onClick","setTimeout","getWeather","disabled","location","title","loader","isSmall","Report","isAnimatedOut","setIsAnimatedOut","isAnimatedIn","setIsAnimatedIn","nextDayIsClicked","setNextDayIsClicked","weatherReport","resetValues","getWeatherReport","Search","loadingSearch","setLoadingSearch","toggleSearch","setToggleSearch","searchInput","setSearchInput","useEffect","onSubmit","e","preventDefault","searchLocation","resetError","handleSubmit","placeholder","onChange","target","value","autoComplete","error","footer","href","rel","aria-label","App","loadingWeather","setLoadingWeather","setError","setWeatherReport","weatherData","setWeatherData","setLocation","sessionStorage","length","getLocation","a","navigator","geolocation","givePermissionError","getCurrentPosition","position","clearTimeout","lat","coords","latitude","toFixed","long","longitude","api","locationData","searchInputFormatted","split","join","undefined","day","data","rainStatus","consolidated_weather","weather_state_abbr","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,mC,yGCA5B,GAEPC,iBAFO,kDAEUC,GAFV,2FAIQ,yCACXC,EALG,mDAKqDD,GALrD,SAOcE,MAHN,yCAGuBD,GAP/B,cAOHE,EAPG,gBAQkBA,EAASC,OAR3B,cAQHC,EARG,yBAUFA,GAVE,kCAYTC,QAAQC,IAAI,gCAAZ,MAZS,gHAgBPC,kBAhBO,kDAgBWC,EAAOC,GAhBlB,2FAkBQ,yCAGLT,EAARS,EAAiB,oEAAgED,EAAhE,YAAyEC,GAChF,iEAA6DD,GAtBlE,SAwBcP,MANN,yCAMuBD,GAxB/B,cAwBHE,EAxBG,gBAyBkBA,EAASC,OAzB3B,cAyBHC,EAzBG,yBA2BFA,GA3BE,kCA6BTC,QAAQC,IAAI,8BAAZ,MA7BS,mHCiBAI,G,MAfC,WACd,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,eACb,yBACEC,IAAKC,EAAQ,IACbC,IAAI,aACJH,UAAU,iBAGd,wBAAIA,UAAU,aAAd,0BCVS,SAASI,EAAOC,GAAQ,IAAD,EACUC,oBAAS,GADnB,mBAC7BC,EAD6B,KACZC,EADY,OAEYF,oBAAS,GAFrB,mBAE7BG,EAF6B,KAEXC,EAFW,KAiBpC,OAEE,yBAAKV,UAAU,WACb,4BACEA,UAAS,4BAAuBO,GAAmB,qBACnDI,QAAS,kBAjBbH,GAAmB,QAEnBI,YAAW,WACTP,EAAMQ,aACNH,GAAoB,GAEpBE,YAAW,WACTF,GAAoB,KACnB,OACF,MASCI,SAAUL,GAHZ,aCpBL,IAQcM,EARG,SAACV,GACjB,OACE,yBAAKL,UAAU,YACb,yBAAKA,UAAU,qBAAqBK,EAAMU,SAAS,GAAGC,SCK7CC,EARC,SAACZ,GACf,OACE,yBAAKL,UAAU,kBACb,yBAAKA,UAAS,iBAAYK,EAAMa,SAAW,uBCHlC,SAASC,EAAQd,GAAQ,IAAD,EACKC,oBAAS,GADd,mBAC9Bc,EAD8B,KACfC,EADe,OAEGf,oBAAS,GAFZ,mBAE9BgB,EAF8B,KAEhBC,EAFgB,OAGWjB,oBAAS,GAHpB,mBAG9BkB,EAH8B,KAGZC,EAHY,KAerC,OACE,yBAAKzB,UAAU,UACb,yBAAKA,UAAS,4BAAuBoB,GAAiB,gCAAxC,YAA2EE,GAAgB,iCAAmCjB,EAAMqB,eAE/IF,EAOC,yBACExB,UAAU,cACVW,QAAS,kBAAMN,EAAMsB,gBAFvB,0CANA,yBACE3B,UAAU,iBACVW,QAAS,kBAhBjBU,GAAiB,QAEjBT,YAAW,WACTP,EAAMuB,iBAAiB,GACvBL,GAAgB,GAChBE,GAAoB,KACnB,OAQG,wBClBK,SAASI,EAAOxB,GAAQ,IAAD,EACMC,oBAAS,GADf,mBAC7BwB,EAD6B,KACdC,EADc,OAEIzB,oBAAS,GAFb,mBAE7B0B,EAF6B,KAEfC,EAFe,OAGE3B,mBAAS,MAHX,mBAG7B4B,EAH6B,KAGhBC,EAHgB,KAKpCC,qBAAU,WACRL,GAAiB,GACjBE,GAAgB,KACf,CAAC5B,EAAMU,WASV,OACE,yBAAKf,UAAU,UACVgC,EAMD,0BACAhC,UAAWgC,EAAe,sCAAwC,cAClEK,SAAU,SAACC,GAAD,OAjBK,SAACA,GACtBA,EAAEC,iBACAlC,EAAMmC,eAAeN,GACrB7B,EAAMoC,aACNV,GAAiB,GAaIW,CAAaJ,KAE9B,2BACEtC,UAAU,eACV2C,YAAY,gBACZC,SAAU,SAACN,GAAD,OAAOH,EAAeG,EAAEO,OAAOC,QACzCC,aAAa,QAEbjB,IAAkBzB,EAAM2C,OACxB,yBAAKhD,UAAU,wBACb,kBAAC,EAAD,CACEkB,SAAS,MAlBf,yBACElB,UAAU,iBACVW,QAAS,kBAAMsB,GAAiBD,KAFlC,UAEyD3B,EAAMU,SAAS,GAAGC,MAF3E,MCtBP,IAWciC,EAXC,WACd,OACE,yBAAKjD,UAAU,UACb,yBAAKA,UAAU,eAAf,cACa,uBAAGkD,KAAK,kCAAkCL,OAAO,SAASM,IAAI,sBAAsBC,aAAW,eAA/F,oBADb,2BAEwB,uBAAGF,KAAK,8BAA8BL,OAAO,SAASM,IAAI,sBAAsBC,aAAW,2BAA3F,mBAFxB,wCCoJSC,MA9If,WAAgB,IAAD,EAC+B/C,oBAAS,GADxC,mBACNgD,EADM,KACUC,EADV,OAEajD,mBAAS,MAFtB,mBAEN0C,EAFM,KAECQ,EAFD,OAG6BlD,mBAAS,MAHtC,mBAGNoB,EAHM,KAGS+B,EAHT,OAIyBnD,mBAAS,MAJlC,mBAINoD,EAJM,KAIOC,EAJP,OAKmBrD,mBAAS,MAL5B,mBAKNS,EALM,KAKI6C,EALJ,KAObxB,qBAAU,WACJyB,eAAeC,OAAS,EAC1BlD,YAAW,WACTgD,EAAY,CAAC,CACX5C,MAAO6C,eAAe7C,MACtB5B,MAAOyE,eAAezE,WAEvB,KAEH2E,MAED,IAEH,IAAMA,EAAW,uCAAG,4BAAAC,EAAA,sDACdC,UAAUC,aACNC,EAAsBvD,YAAW,kBAAM4C,EAAS,0CAAyC,KAE/FS,UAAUC,YAAYE,mBAAtB,uCACE,WAAOC,GAAP,mBAAAL,EAAA,6DACEM,aAAaH,GACbX,EAAS,2BACHe,EAAMF,EAASG,OAAOC,SAASC,QAAQ,IACvCC,EAAON,EAASG,OAAOI,UAAUF,QAAQ,IAJjD,SAM6BG,EAAIjF,kBAAkB2E,EAAKI,GANxD,QAMQG,EANR,SAQqBtB,EAAS,oEAC5BI,EAAYkB,GACZjB,eAAe7C,MAAQ8D,EAAa,GAAG9D,MACvC6C,eAAezE,MAAQ0F,EAAa,GAAG1F,MACvCoE,EAAS,MAZX,4CADF,uDAeE,SAACR,GACCQ,EAAS,oEACT9D,QAAQC,IAAI,UAAWqD,OAI3BQ,EAAS,iDAzBO,2CAAH,qDA6BXhB,EAAc,uCAAG,WAAON,GAAP,iBAAA8B,EAAA,6DACfe,EAAuB7C,EAAY8C,MAAM,KAAKC,KAAK,KADpC,SAEMJ,EAAIjF,kBAAkBmF,GAF5B,YAIAG,KAFfJ,EAFe,SAIqC,IAAxBA,EAAahB,OAAcN,EAAS,kEACjEI,EAAYkB,GALI,2CAAH,sDAQdjE,EAAU,uCAAG,WAAOzB,EAAO+F,GAAd,eAAAnB,EAAA,6DACjBhB,GAASQ,EAAS,MAClBD,GAAkB,GAFD,SAIMsB,EAAI1F,iBAAiBC,GAJ3B,OAIXG,EAJW,OAMjBgE,GAAkB,GAEdhE,GACFoE,EAAepE,GACfqC,EAAiBuD,EAAK5F,IAEtBiE,EAAS,yDAZM,2CAAH,wDAgBV5B,EAAmB,SAACuD,EAAKC,GAC7B,IAAIC,EAEMA,EAAND,EAAmBA,EAAKE,qBAAqBH,GAAKI,mBACpC7B,EAAY4B,qBAAqBH,GAAKI,mBAExD,IAAM7D,EAAgB,CACpB,GAAM,sCACN,GAAM,iCACN,EAAK,6CACL,EAAK,qDACL,GAAM,oBACN,GAAM,mCACN,EAAK,uCACL,EAAK,kBACL,GAAM,yCACN,GAAM,oCACN,QAAW,uCAGb+B,EAAiB/B,EAAc2D,IAAe3D,EAAa,UAG7D,OACE,yBAAK1B,UAAU,OAEb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,WACX0B,GACA,kBAACP,EAAD,CACES,iBAAkBA,EAClBF,cAAeA,EACfC,YAAa,kBAAM8B,EAAiB,SAItCH,GACA,kBAAC,EAAD,MAGAvC,IAAaW,IAAkB4B,GAC/B,kBAAClD,EAAD,CACES,WAAY,kBAAMA,EAAWE,EAAS,GAAG3B,MAAO,MAIlD2B,IAAaW,IAAkB4B,GAC/B,kBAAC,EAAD,CACEvC,SAAUA,IAIZA,IAAaW,IAAkB4B,GAC/B,kBAACzB,EAAD,CACEd,SAAUA,EACViC,MAAOA,EACPP,WAAY,kBAAMe,EAAS,OAC3BhB,eAAgBA,IAIlBQ,GAAS,yBAAKhD,UAAS,gBAAqB,mEAAVgD,GAA8E,sBAAwBA,IAE5I,kBAAC,EAAD,QCxIcwC,QACW,cAA7BC,OAAO1E,SAAS2E,UAEe,UAA7BD,OAAO1E,SAAS2E,UAEhBD,OAAO1E,SAAS2E,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmB9B,WACrBA,UAAU+B,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e0b8bdef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rainy.8b92f956.svg\";","export default {\n\n  async fetchWeatherData(woeid) {\n    try {\n      const proxyUrl = 'https://thingproxy.freeboard.io/fetch/',\n            targetUrl = `https://www.metaweather.com/api/location/${woeid}`\n\n      const response = await fetch(proxyUrl + targetUrl)\n      const jsonResponse = await response.json()\n\n      return jsonResponse\n    } catch (error) {\n      console.log('Error fetching weather data: ', error)\n    }\n  },\n\n  async fetchLocationData(param, param2) {\n    try {\n      const proxyUrl = 'https://thingproxy.freeboard.io/fetch/'\n      let targetUrl\n\n      if (param2) targetUrl = `https://www.metaweather.com/api/location/search/?lattlong=${param},${param2}`\n      else targetUrl = `https://www.metaweather.com/api/location/search/?query=${param}`\n\n      const response = await fetch(proxyUrl + targetUrl)\n      const jsonResponse = await response.json()\n\n      return jsonResponse\n    } catch (error) {\n      console.log('Error fetching woeid data: ', error)\n    }\n  }\n}\n","import React from 'react'\r\n\r\n const header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"iconWrapper\">\r\n        <img\r\n          src={require(`../../assets/icons/rainy.svg`)}\r\n          alt=\"cloud-icon\"\r\n          className=\"header-icon\"\r\n        />\r\n      </div>\r\n      <h1 className=\"header-h1\">WILL IT RAIN TODAY?</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default header;","import React, { useState } from 'react';\r\n\r\nexport default function Button(props) {\r\n  const [buttonIsClicked, setButtonIsClicked] = useState(false)\r\n  const [buttonIsDisabled, setButtonIsDisabled] = useState(false)\r\n\r\n  const getWeatherReport = () => {\r\n    setButtonIsClicked(true)\r\n\r\n    setTimeout(() => {\r\n      props.getWeather()\r\n      setButtonIsDisabled(true)\r\n\r\n      setTimeout(() => {\r\n        setButtonIsDisabled(false)\r\n      }, 5000)\r\n    }, 500)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"button \">\r\n      <button\r\n        className={`button-trigger h3 ${buttonIsClicked && \"button--isClicked\"}`}\r\n        onClick={() => getWeatherReport()}\r\n        disabled={buttonIsDisabled}>\r\n        FIND OUT</button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n const location = (props) => {\r\n  return (\r\n    <div className=\"location\">\r\n      <div className=\"h4 location-title\">{props.location[0].title}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default location;","import React from 'react'\r\n\r\n const loader = (props) => {\r\n  return (\r\n    <div className=\"loader-wrapper\">\r\n      <div className={`loader ${props.isSmall && \"loader--isSmall\"}`}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default loader","import React, { useState } from 'react';\r\n\r\nexport default function Report (props) {\r\n  const [isAnimatedOut, setIsAnimatedOut] = useState(false)\r\n  const [isAnimatedIn, setIsAnimatedIn] = useState(false)\r\n  const [nextDayIsClicked, setNextDayIsClicked] = useState(false)\r\n\r\n  const getTomorrow = () => {\r\n    setIsAnimatedOut(true)\r\n\r\n    setTimeout(() => {\r\n      props.getWeatherReport(1)\r\n      setIsAnimatedIn(true)\r\n      setNextDayIsClicked(true)\r\n    }, 700)\r\n  }\r\n\r\n  return (\r\n    <div className=\"report\">\r\n      <div className={`h3 report-content ${isAnimatedOut && \"report-content--isAnimatedOut\"} ${isAnimatedIn && \"report-content--isAnimatedIn\"}`}>{props.weatherReport}</div>\r\n\r\n      { !nextDayIsClicked ?\r\n          <div\r\n            className=\"report-nextDay\"\r\n            onClick={() => getTomorrow()}>\r\n            How about tomorrow?\r\n          </div>\r\n        :\r\n          <div\r\n            className=\"report-back\"\r\n            onClick={() => props.resetValues()}>\r\n            Want to try with a different location?\r\n         </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Loader from './../loader/loader';\r\n\r\n\r\nexport default function Search(props) {\r\n  const [loadingSearch, setLoadingSearch] = useState(false)\r\n  const [toggleSearch, setToggleSearch] = useState(false)\r\n  const [searchInput, setSearchInput] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoadingSearch(false)\r\n    setToggleSearch(false)\r\n  }, [props.location])\r\n\r\n  const handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n    props.searchLocation(searchInput)\r\n    props.resetError()\r\n    setLoadingSearch(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      { !toggleSearch ?\r\n        <div\r\n          className=\"search-trigger\"\r\n          onClick={() => setToggleSearch(!toggleSearch)}>Not in {props.location[0].title}?\r\n        </div>\r\n        :\r\n        <form\r\n        className={toggleSearch ? 'search-form search-form--isAnimated' : 'search-form'}\r\n        onSubmit={(e) => handleSubmit(e)}\r\n        >\r\n        <input\r\n          className=\"search-field\"\r\n          placeholder=\"Search for...\"\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        { loadingSearch && !props.error &&\r\n          <div className=\"search-loaderWrapper\">\r\n            <Loader\r\n              isSmall={true}\r\n            />\r\n          </div>\r\n        }\r\n        </form>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\n const footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-text\">\r\n        Created by <a href=\"https://github.com/petterastedt\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"github link\">Petter Åstedt</a>.\r\n        This website is using <a href=\"https://www.metaweather.com\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"link to metaweather api\">MetaWeather API</a> for accurate weather predictions.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default footer;","import React, { useState, useEffect } from 'react';\nimport api from './api';\nimport './main.css';\nimport Header from './components/header/header';\nimport Button from './components/button/button';\nimport Location from './components/location/location';\nimport Loader from './components/loader/loader';\nimport Report from './components/report/report';\nimport Search from './components/search/search';\nimport Footer from './components/footer/footer';\n\nfunction App() {\n  const [loadingWeather, setLoadingWeather] = useState(false)\n  const [error, setError] = useState(null)\n  const [weatherReport, setWeatherReport] = useState(null)\n  const [weatherData, setWeatherData] = useState(null)\n  const [location, setLocation] = useState(null)\n\n  useEffect(() => {\n    if (sessionStorage.length > 0) {\n      setTimeout(() => {\n        setLocation([{\n          title: sessionStorage.title,\n          woeid: sessionStorage.woeid\n        }])\n      }, 2000)\n   } else {\n      getLocation()\n    }\n  }, [])\n\n  const getLocation = async () => {\n    if (navigator.geolocation) {\n      const givePermissionError = setTimeout(() => setError(\"Please allow us to see your location\"), 4000)\n\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          clearTimeout(givePermissionError)\n          setError(\"Getting your location..\")\n          const lat = position.coords.latitude.toFixed(10)\n          const long = position.coords.longitude.toFixed(10)\n\n          const locationData = await api.fetchLocationData(lat, long)\n\n          if (!locationData) setError(\"Something went wrong when fetching your location.. (Weather API)\")\n          setLocation(locationData)\n          sessionStorage.title = locationData[0].title\n          sessionStorage.woeid = locationData[0].woeid\n          setError(null)\n        },\n        (error) => {\n          setError(\"Something went wrong when fetching your location..(Location API)\")\n          console.log('Error: ', error)\n        }\n      )\n    } else {\n      setError(\"Geolocation is not supported by this browser.\")\n    }\n  }\n\n  const searchLocation = async (searchInput) => {\n    const searchInputFormatted = searchInput.split(' ').join('+')\n    const locationData = await api.fetchLocationData(searchInputFormatted)\n\n    if (locationData === undefined || locationData.length === 0) setError(\"Couldn't find location, try searching for a bigger city nearby\")\n    else setLocation(locationData)\n  }\n\n  const getWeather = async (woeid, day) => {\n    error && setError(null)\n    setLoadingWeather(true)\n\n    const response = await api.fetchWeatherData(woeid)\n\n    setLoadingWeather(false)\n\n    if (response) {\n      setWeatherData(response)\n      getWeatherReport(day, response)\n    } else {\n      setError(\"Something went wrong when fetching the weather data..\")\n    }\n  }\n\n  const getWeatherReport = (day, data) => {\n    let rainStatus\n\n    if (data) rainStatus = data.consolidated_weather[day].weather_state_abbr\n    else rainStatus = weatherData.consolidated_weather[day].weather_state_abbr\n\n    const weatherReport = {\n      'sn': 'It\\'s gonna snow! 🌨️',\n      'sl': 'Yuck, sleet today 😖',\n      'h': 'It\\'s gonna hail! Stay inside! 😬',\n      't': 'Yes, looks like theres a storm coming ⛈️',\n      'hr': 'Yes, a lot ☔',\n      'lr': 'Yes, a little 🌧️',\n      's': 'Yes, some showers 🌦️',\n      'c': 'No 🌞',\n      'hc': 'No, lots of clouds though ☁️',\n      'lc': 'No, looks fine 🌤️',\n      'default': 'Yikes, something went wrong! ❌'\n    }\n\n    setWeatherReport(weatherReport[rainStatus] || weatherReport['default'])\n  }\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n\n      <div className=\"wrapper\">\n        { weatherReport &&\n          <Report\n            getWeatherReport={getWeatherReport}\n            weatherReport={weatherReport}\n            resetValues={() => setWeatherReport(null)}\n          />\n        }\n\n        { loadingWeather &&\n          <Loader/>\n        }\n\n        { location && !weatherReport && !loadingWeather &&\n          <Button\n            getWeather={() => getWeather(location[0].woeid, 0)}\n          />\n        }\n\n        { location && !weatherReport && !loadingWeather &&\n          <Location\n            location={location}\n          />\n        }\n\n        { location && !weatherReport && !loadingWeather &&\n          <Search\n            location={location}\n            error={error}\n            resetError={() => setError(null)}\n            searchLocation={searchLocation}\n          />\n        }\n\n        { error && <div className={`error ${error === \"Couldn't find location, try searching for a bigger city nearby\" && \"error--isBlinking\"}`}>{error}</div> }\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}